{
  "swagger": "2.0",
  "info": {
    "title": "v1/admin_api.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/merchants": {
      "get": {
        "summary": "GetMerchants returns a list of merchants the user has access to",
        "operationId": "GetMerchants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MerchantList"
            }
          }
        },
        "tags": [
          "MerchantService"
        ]
      },
      "post": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "CreateMerchant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            }
          }
        ],
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/merchants/{merchantId}/customers": {
      "get": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "GetCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CustomerList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CustomerService"
        ]
      },
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Customer"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Customer"
            }
          }
        ],
        "tags": [
          "CustomerService"
        ]
      }
    },
    "/merchants/{merchantId}/inventories/{inventoryId}/items": {
      "get": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "ListInventoryItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InventoryItemList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "AddInventoryItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InventoryItem"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddInventoryItemRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/merchants/{merchantId}/inventories/{inventoryId}/items/{productId}": {
      "put": {
        "summary": "GetMerchants returns a list of merchants the user has access to",
        "operationId": "UpdateInventoryItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InventoryItem"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateInventoryItemRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/merchants/{merchantId}/orders": {
      "get": {
        "summary": "InviteUserDry validates the provided user for existence. correct email,\nand other required fields by user invitation process",
        "operationId": "GetOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrderList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDER_STATUS_UNDEFINED",
                "NOT_SUBMITTED",
                "SUBMITTED",
                "PAID",
                "SENT",
                "CANCEL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/merchants/{merchantId}/products": {
      "get": {
        "summary": "GetUsers returns all users present in the merchant",
        "operationId": "ListProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "description": "Required. Id of the merchant to which the product is assigned",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "post": {
        "summary": "InviteUserDry validates the provided user for existence. correct email,\nand other required fields by user invitation process",
        "operationId": "CreateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "description": "Required. Id of the merchant to which the product is assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "put": {
        "summary": "InviteUser creates a user account for the user in case it didn't exist before.\nOtherwise it invites the user into the merchant",
        "operationId": "UpdateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "description": "Required. Id of the merchant to which the product is assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateProductRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/merchants/{merchantId}/products/{productId}": {
      "get": {
        "summary": "Loads single product from a given merchant",
        "operationId": "GetProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "description": "Required. Id of the merchant to which the product is assigned",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "description": "Required. Id of the product",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/merchants/{merchantId}/providers": {
      "get": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "GetProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProviderList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Provider"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Provider"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/merchants/{merchantId}/schemas": {
      "post": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "CreateProductSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductSchema"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProductSchema"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/merchants/{merchantId}/schemas:dry": {
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateProductSchemaDry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProductSchema"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProductSchema"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/merchants/{merchantId}/stores": {
      "get": {
        "summary": "InviteUserDry validates the provided user for existence. correct email,\nand other required fields by user invitation process",
        "operationId": "ListStores",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StoreList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StoreService"
        ]
      },
      "post": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "CreateStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Store"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStoreRequest"
            }
          }
        ],
        "tags": [
          "StoreService"
        ]
      },
      "put": {
        "summary": "GetMerchants returns a list of merchants the user has access to",
        "operationId": "UpdateStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Store"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateStoreRequest"
            }
          }
        ],
        "tags": [
          "StoreService"
        ]
      }
    },
    "/merchants/{merchantId}/stores/{storeId}": {
      "get": {
        "summary": "InviteUser creates a user account for the user in case it didn't exist before.\nOtherwise it invites the user into the merchant",
        "operationId": "GetStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StoreDetails"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StoreService"
        ]
      }
    },
    "/merchants/{merchantId}/stores/{storeId}/orders": {
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/merchants/{merchantId}/stores/{storeId}/orders/{orderId}": {
      "delete": {
        "summary": "GetMerchants returns a list of merchants the user has access to",
        "operationId": "CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ORDER_STATUS_UNDEFINED",
              "NOT_SUBMITTED",
              "SUBMITTED",
              "PAID",
              "SENT",
              "CANCEL"
            ],
            "default": "ORDER_STATUS_UNDEFINED"
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "total_amount.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "total_amount.value",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "OrderService"
        ]
      },
      "put": {
        "summary": "CreateMerchant creates a merchant in the database and returns the object\nback with populated data",
        "operationId": "UpdateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        ],
        "tags": [
          "OrderService"
        ]
      }
    },
    "/merchants/{merchantId}/stores:dry": {
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateStoreDry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Store"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStoreRequest"
            }
          }
        ],
        "tags": [
          "StoreService"
        ]
      }
    },
    "/merchants/{merchantId}/upload": {
      "post": {
        "summary": "GetMerchants returns a list of merchants the user has access to",
        "operationId": "CreateUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UploadMeta"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadMeta"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/merchants/{merchantId}/users": {
      "get": {
        "summary": "GetUsers returns all users present in the merchant",
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserList"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "description": "[Required] merchant_id can be set only once and is unchangeable during lifetime",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "[Required] name of the merchant can be customized by the user, however, the id\nwill stay unchanged.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MerchantService"
        ]
      },
      "post": {
        "summary": "InviteUser creates a user account for the user in case it didn't exist before.\nOtherwise it invites the user into the merchant",
        "operationId": "InviteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/merchants/{merchantId}/users:dry": {
      "post": {
        "summary": "InviteUserDry validates the provided user for existence. correct email,\nand other required fields by user invitation process",
        "operationId": "InviteUserDry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/merchants:dry": {
      "post": {
        "summary": "CreateMerchantDry runs validation on the server side and returns\nerrors that need to be corrected to successfully create the merchant",
        "operationId": "CreateMerchantDry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            }
          }
        ],
        "tags": [
          "MerchantService"
        ]
      }
    }
  },
  "definitions": {
    "v1AddInventoryItemRequest": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "inventoryId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/v1Amount"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Request for adding product items within inventory."
    },
    "v1Amount": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Message representing a value of something in a particular currency"
    },
    "v1CreateProductRequest": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "title": "Required. Id of the merchant to which the product is assigned"
        },
        "storeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultAmount": {
          "$ref": "#/definitions/v1Amount"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "attributes are custom key-value pairs provided for the product"
        }
      }
    },
    "v1CreateStoreRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string",
          "title": "Optional custom ID"
        },
        "merchantId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "string location = 11;"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "Request for create store in Firestore database"
    },
    "v1Customer": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        }
      }
    },
    "v1CustomerList": {
      "type": "object"
    },
    "v1Expression": {
      "type": "object",
      "properties": {
        "lhs": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "rhs": {
          "type": "string"
        }
      },
      "title": "Message representing an expression to be used especially in filter operations"
    },
    "v1InventoryItem": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "inventoryId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "amount": {
          "$ref": "#/definitions/v1Amount"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "product": {
          "$ref": "#/definitions/v1Product"
        }
      },
      "description": "Response message for InventoryItem model."
    },
    "v1InventoryItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InventoryItem"
          }
        }
      }
    },
    "v1Merchant": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string",
          "title": "[Required] merchant_id can be set only once and is unchangeable during lifetime"
        },
        "name": {
          "type": "string",
          "title": "[Required] name of the merchant can be customized by the user, however, the id\nwill stay unchanged"
        }
      }
    },
    "v1MerchantList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Merchant"
          }
        }
      }
    },
    "v1Order": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1OrderStatus"
        },
        "note": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrderItem"
          }
        },
        "totalAmount": {
          "$ref": "#/definitions/v1Amount"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "merchantId": {
          "type": "string"
        },
        "storeId": {
          "type": "string"
        }
      }
    },
    "v1OrderItem": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "$ref": "#/definitions/v1Amount"
        },
        "orderId": {
          "type": "string"
        }
      }
    },
    "v1OrderList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Order"
          }
        }
      }
    },
    "v1OrderStatus": {
      "type": "string",
      "enum": [
        "ORDER_STATUS_UNDEFINED",
        "NOT_SUBMITTED",
        "SUBMITTED",
        "PAID",
        "SENT",
        "CANCEL"
      ],
      "default": "ORDER_STATUS_UNDEFINED"
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "productSchemaId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "storeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultAmount": {
          "$ref": "#/definitions/v1Amount"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "attributes are custom key-value pairs provided for the product"
        }
      }
    },
    "v1ProductList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1ProductSchema": {
      "type": "object",
      "properties": {
        "productSchemaId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/v1User",
          "title": "createdBy is a reference to the user that created this product schema"
        },
        "merchantId": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "attributes are custom key-value pairs provided for the product"
        }
      }
    },
    "v1Provider": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        }
      }
    },
    "v1ProviderList": {
      "type": "object"
    },
    "v1Store": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "string location = 11;"
        },
        "description": {
          "type": "string"
        },
        "inventoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StoreDetails": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "string location = 11;"
        },
        "description": {
          "type": "string"
        },
        "productCounter": {
          "type": "integer",
          "format": "int64"
        },
        "itemCounter": {
          "type": "integer",
          "format": "int64"
        },
        "inventoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InventoryItem"
          }
        }
      }
    },
    "v1StoreList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Store"
          }
        }
      }
    },
    "v1UpdateInventoryItemRequest": {
      "type": "object",
      "properties": {
        "merchantId": {
          "type": "string"
        },
        "inventoryId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/v1Amount"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Request for updating product items within inventory."
    },
    "v1UpdateProductRequest": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "title": "Required. Id of the merchant to which the product is assigned"
        },
        "storeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultAmount": {
          "$ref": "#/definitions/v1Amount"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "attributes are custom key-value pairs provided for the product"
        }
      }
    },
    "v1UpdateStoreRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "title": "string location = 11;"
        },
        "description": {
          "type": "string"
        },
        "inventoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request for update store in Firestore database"
    },
    "v1UploadMeta": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "title": "[Required] fileName is searchable throughout the system"
        },
        "link": {
          "type": "string",
          "title": "[Output Only] this is being provided by the system after the file is uploaded"
        },
        "merchantId": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "invitedById": {
          "type": "string",
          "title": "id of the user this user was invited by into the system"
        },
        "merchantId": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "v1UserList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    }
  }
}
